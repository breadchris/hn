// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// ItemsColumns holds the columns for the "items" table.
	ItemsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true},
		{Name: "deleted", Type: field.TypeBool},
		{Name: "type", Type: field.TypeEnum, Enums: []string{"job", "story", "comment", "poll", "pollopt"}},
		{Name: "by", Type: field.TypeString, Nullable: true},
		{Name: "text", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "dead", Type: field.TypeBool},
		{Name: "parent", Type: field.TypeInt, Nullable: true},
		{Name: "poll", Type: field.TypeInt, Nullable: true},
		{Name: "kids", Type: field.TypeJSON, Nullable: true},
		{Name: "url", Type: field.TypeString, Nullable: true},
		{Name: "score", Type: field.TypeInt, Nullable: true},
		{Name: "title", Type: field.TypeString, Nullable: true},
		{Name: "parts", Type: field.TypeJSON, Nullable: true},
		{Name: "descendants", Type: field.TypeInt, Nullable: true},
		{Name: "time", Type: field.TypeInt},
	}
	// ItemsTable holds the schema information for the "items" table.
	ItemsTable = &schema.Table{
		Name:       "items",
		Columns:    ItemsColumns,
		PrimaryKey: []*schema.Column{ItemsColumns[0]},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true},
		{Name: "created", Type: field.TypeInt64, Nullable: true},
		{Name: "karma", Type: field.TypeInt, Default: 0},
		{Name: "about", Type: field.TypeString, Nullable: true, Size: 2147483647},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// ItemChildrenColumns holds the columns for the "item_children" table.
	ItemChildrenColumns = []*schema.Column{
		{Name: "item_id", Type: field.TypeString},
		{Name: "parent_id", Type: field.TypeString},
	}
	// ItemChildrenTable holds the schema information for the "item_children" table.
	ItemChildrenTable = &schema.Table{
		Name:       "item_children",
		Columns:    ItemChildrenColumns,
		PrimaryKey: []*schema.Column{ItemChildrenColumns[0], ItemChildrenColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "item_children_item_id",
				Columns:    []*schema.Column{ItemChildrenColumns[0]},
				RefColumns: []*schema.Column{ItemsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "item_children_parent_id",
				Columns:    []*schema.Column{ItemChildrenColumns[1]},
				RefColumns: []*schema.Column{ItemsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		ItemsTable,
		UsersTable,
		ItemChildrenTable,
	}
)

func init() {
	ItemChildrenTable.ForeignKeys[0].RefTable = ItemsTable
	ItemChildrenTable.ForeignKeys[1].RefTable = ItemsTable
}
