// Code generated by ent, DO NOT EDIT.

package user

import (
	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the user type in the database.
	Label = "user"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreated holds the string denoting the created field in the database.
	FieldCreated = "created"
	// FieldKarma holds the string denoting the karma field in the database.
	FieldKarma = "karma"
	// FieldAbout holds the string denoting the about field in the database.
	FieldAbout = "about"
	// Table holds the table name of the user in the database.
	Table = "users"
)

// Columns holds all SQL columns for user fields.
var Columns = []string{
	FieldID,
	FieldCreated,
	FieldKarma,
	FieldAbout,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultKarma holds the default value on creation for the "karma" field.
	DefaultKarma int
)

// OrderOption defines the ordering options for the User queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByCreated orders the results by the created field.
func ByCreated(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCreated, opts...).ToFunc()
}

// ByKarma orders the results by the karma field.
func ByKarma(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldKarma, opts...).ToFunc()
}

// ByAbout orders the results by the about field.
func ByAbout(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldAbout, opts...).ToFunc()
}
